{"version":3,"file":"static/js/134.864186be.chunk.js","mappings":"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","sources":["hooks/useFetch.jsx","pages/Movies.jsx","services/api.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useCallback, useState } from 'react';\n\nexport const useFetch = () => {\n  const [isFetching, setIsFetching] = useState(false);\n  const [data, setData] = useState(null);\n  const [error, setError] = useState('');\n\n  const fetchData = useCallback(async (requestFunction) => {\n    setIsFetching(true);\n    try {\n      const data = await requestFunction;\n\n      setData(data);\n    } catch (e) {\n      setError(e);\n    } finally {\n      setIsFetching(false);\n    }\n  }, []);\n\n  return { isFetching, data, error, fetchData };\n};\n","import React, { useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { useFetch } from 'hooks/useFetch';\nimport { MoviesAPI } from 'services/api';\n\nimport { MoviesGallery, Searchbar } from 'components';\n\nfunction Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const { isFetching, data, error, fetchData } = useFetch();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) return;\n\n    fetchData(MoviesAPI.fetchMovieBySearch(query));\n  }, [query, fetchData]);\n\n  const handleSubmitSearchTerm = query => {\n    setSearchParams({ query: query });\n  };\n\n  const movies = data?.results;\n  return (\n    <div>\n      <Searchbar onSubmit={handleSubmitSearchTerm} />\n      <MoviesGallery error={error} isFetching={isFetching} movies={movies} />\n    </div>\n  );\n}\n\nexport default Movies;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '95b1302bfbaa67a4b0727b46a7f8151e';\n\nexport const MoviesAPI = {\n  async fetchMovies ()  {\n    const response = await fetch(\n      `${BASE_URL}/trending/all/day?api_key=${API_KEY}`\n    );\n    if(response.ok){\n      return await response.json();\n    }else{\n      throw Error;\n    }\n  },\n  async fetchMovieById (movieId)  {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    if(response.ok){\n      return await response.json();\n    }else{\n      throw Error;\n    }\n  },\n  async fetchMovieBySearch (searchTerm)  {\n    const response = await fetch(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}&page=1&include_adult=false`\n    );\n    if(response.ok){\n      return await response.json();\n    }else{\n      throw Error;\n    }\n  },\n  async fetchMovieCast (movieId)  {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    if(response.ok){\n      return await response.json();\n    }else{\n      throw Error;\n    }\n  },\n  async fetchMovieReviews (movieId)  {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    if(response.ok){\n      return await response.json();\n    }else{\n      throw Error;\n    }\n  },\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["useFetch","useState","isFetching","setIsFetching","data","setData","error","setError","fetchData","useCallback","requestFunction","useSearchParams","searchParams","setSearchParams","query","get","useEffect","MoviesAPI","movies","results","onSubmit","BASE_URL","API_KEY","fetchMovies","fetch","response","ok","json","Error","fetchMovieById","movieId","fetchMovieBySearch","searchTerm","fetchMovieCast","fetchMovieReviews","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}