{"version":3,"file":"static/js/493.6e1f7564.chunk.js","mappings":"uMA6CA,UAtCA,WACE,OAA+CA,EAAAA,EAAAA,KAAvCC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,KAAMC,EAA1B,EAA0BA,MAAOC,EAAjC,EAAiCA,UAC3BC,EAAQ,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAAMI,KACjBC,GAAYC,EAAAA,EAAAA,MAAZD,QAQN,OANAE,EAAAA,EAAAA,YAAU,WACHF,GAELH,EAAUM,EAAAA,EAAAA,eAAyBH,GACpC,GAAE,CAACH,EAAWG,KAGb,2BACGJ,IAAS,uBAAIA,EAAMQ,UACnBV,IACC,0BACE,SAAC,KAAD,QAGDI,IAAaJ,IACd,wBACGI,EAASO,OAAS,GACjBP,EAASQ,KAAI,SAAAP,GAAI,OACf,gBAAIQ,UAAU,YAAd,WACE,gBACEC,IAAG,yCAAoCT,EAAKU,cAC5CC,IAAKX,EAAKY,QAEZ,uBAAIZ,EAAKY,QACT,uCAAeZ,EAAKa,eANSb,EAAKc,GADrB,QAc5B,C","sources":["pages/Cast.jsx"],"sourcesContent":["import { Loader } from 'components';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useFetch } from 'hooks/useFetch';\nimport { MoviesAPI } from 'services/api';\n\n\nfunction Cast() {\n  const { isFetching, data, error, fetchData } = useFetch();\n  const castData = data?.cast;\n  let { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    fetchData(MoviesAPI.fetchMovieCast(movieId));\n  }, [fetchData, movieId]);\n\n  return (\n    <div>\n      {error && <p>{error.message}</p>}\n      {isFetching && (\n        <div>\n          <Loader />\n        </div>\n      )}\n      {!!castData && !isFetching && (\n        <ul>\n          {castData.length > 0 &&\n            castData.map(cast => (\n              <li className=\"cast-item\" key={cast.id}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${cast.profile_path}`}\n                  alt={cast.name}\n                />\n                <p>{cast.name}</p>\n                <p>Character: {cast.character}</p>\n              </li>\n            ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default Cast;\n"],"names":["useFetch","isFetching","data","error","fetchData","castData","cast","movieId","useParams","useEffect","MoviesAPI","message","length","map","className","src","profile_path","alt","name","character","id"],"sourceRoot":""}